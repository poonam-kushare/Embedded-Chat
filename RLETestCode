<html>
	<body> 		
		<!-- We are hiding the standard chat widget with the css below-->
		<style type='text/css'>
			::-webkit-scrollbar-thumb {
			    background: #54575a;
			    border-radius: 10px;
			}
			::-webkit-scrollbar-track {
			    background: #d4d4d4;
			    border-radius: 10px;
			}
			::-webkit-scrollbar {
			    width: 5px;
			}
			*{box-sizing: border-box;}
			.activeFeature.hideWhileLoading {
			padding: 20px;			
			}
			.helpButtonEnabled:focus .helpButtonLabel, .embeddedServiceSidebarMinimizedDefaultUI.minimizedContainer:focus {
    text-decoration: none !important;
}
			.embeddedServiceSidebarForm .embeddedServiceSidebarFormField {
    margin-left: 0;
}
.embeddedServiceSidebarForm .fieldList {
    margin: 0;
     padding: 0 10px 0 0;
}
.embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):focus, .embeddedServiceSidebarButton.uiButton--inverse:not(:disabled):hover {
    background-color: #54575a;
    text-decoration: none;
}
.embeddedServiceSidebarButton.uiButton--inverse .label {
    color: #fff;
}
.embeddedServiceSidebarButton:focus {text-decoration: none;}

			.embeddedServiceHelpButton .uiButton .helpButtonLabel .message {
				font-size: 13px;
				color: #000;
				text-decoration: none !important;
			}

			.embeddedServiceHelpButton .helpButton .uiButton.helpButtonDisabled {
				background: #e0d672;
				padding-left: 40px;
			}

			.embeddedServiceHelpButton .embeddedServiceIcon {
				display: none !important;
			}
			
			.embeddedServiceHelpButton .helpButton .uiButton.helpButtonEnabled {
				background: #e0d672;
				padding-left: 40px;
			}

			.embeddedServiceLiveAgentStateChatItem .nameAndTimeContent {
				color: #828386;
			}

			.embeddedServiceLiveAgentStateChatItem.agent .nameAndTimeDotDivider {
				background-color: #fff;
			}

			.embeddedServiceHelpButton .helpButton:before {
				background: url(https://toyrusca--uat--c.documentforce.com/servlet/servlet.ImageServer?id=015030000004zMf&oid=00D030000008acd&lastMod=1615559191000);
				background-size: 100%;
				background-position: bottom left;
				background-repeat: no-repeat;
				content: '';
				position: absolute;
				width: 100px;
				height: 85px;
				z-index: 99;
				left: -62px;
				bottom: -27px;
			}

			.sidebarHeader.minimizedContainer.embeddedServiceSidebarMinimizedDefaultUI:before {
				background: url(https://toyrusca--uat--c.documentforce.com/servlet/servlet.ImageServer?id=015030000004zMf&oid=00D030000008acd&lastMod=1615559191000);
				background-size: 100%;
				background-position: bottom left;
				background-repeat: no-repeat;
				content: '';
				position: fixed;
				width: 100px;
				height: 85px;
				z-index: 99;
				bottom: -31px;
				right:164px;
			}
			.embeddedServiceSidebarMinimizedDefaultUI .minimizedImage, .embeddedServiceSidebarMinimizedDefaultUI .embeddedServiceIcon{    display: none;}

			.embeddedServiceSidebarMinimizedDefaultUI.newMessage,
			.embeddedServiceSidebarMinimizedDefaultUI.idleTimeout {
				background: #EFDF93;
			}

			.embeddedServiceSidebar .sidebarBody {
				background: #e3d980;
			}

			.sidebarHeader[embeddedService-chatHeader_chatHeader] {
				font-size: 14px;
				background: #54575a;
			}

			.embeddedServiceSidebarState.stateBody {
				width: 100%;
				height: 100%;
				box-sizing: border-box;
				padding: 0px;
			}

			.messageArea.smoothScroll {
				background: transparent;
				border: none !important;
				padding-right: 10px;
			}

			.embeddedServiceLiveAgentStateChat .chasitorInputWrapper {
				background: transparent;
			}

			.embeddedServiceLiveAgentStateChatItem.chatMessage {
				background: transparent;
				padding: 0;
			}

			.embeddedServiceLiveAgentStateChatMessage .uiOutputRichText {
				color: #54575a;
				font-size: 13px;
			}

			.plaintextContent.agent.embeddedServiceLiveAgentStateChatPlaintextMessageDefaultUI {
				background: #fff;
			}

			.embeddedServiceLiveAgentStateChat .chatSessionStartTime,
			.embeddedServiceLiveAgentStateChatInputFooter .chasitorControls .uiInput {
				color: #54575a;
			}

			.embeddedServiceSidebarDialogState #dialogTextTitle,
			.embeddedServiceSidebarDialogState #dialogTextBody {
				color: #54575a;
			}

			.embeddedServiceSidebarDialogState .dialogButton {
				background: #54575a;
			}

			.embeddedServiceLiveAgentStateChat .endChatContainer .endChatButton {
				background: #54575a;
				margin: 10px 0 0;
				width: 100%;
			}

			.embeddedServiceSidebarDialogState .dialogButton:hover,
			.embeddedServiceLiveAgentStateChat .endChatContainer .endChatButton:hover {
				background: #909090 !important;
			}

			.formContent.embeddedServiceSidebarForm,
			.embeddedServiceSidebarForm.buttonWrapper {
				background: transparent;
			}

			.embeddedServiceSidebarFormField .uiInput .uiLabel-left {
				color: #54575a;
				font-size: 12px;
			}

			.formContent.embeddedServiceSidebarForm .uiInput input {
				border: none;
				color: #54575a;
				font-size: 13px;
			}
			button[embeddedService-chatHeader_chatHeader] {
			    border: 1px solid #e3d980;
			    margin: 0 3px;
			    border-radius: 3px;
				cursor: pointer;
				    outline: none !important;
			}
			button[embeddedService-chatHeader_chatHeader] svg {
			    fill: #e3d980 !important;
			}
			button[embeddedService-chatHeader_chatHeader]:before {
			    display: none;
			}
			.helpButton {outline: none !important;}
			.embeddedServiceSidebarMinimizedDefaultUI.helpButton {
			    background: #e3d980 !important;
			    border: none;
			    padding-left: 28px;
			    min-width: unset;
			    width: unset;
			    max-width: unset;
			}
			.embeddedServiceSidebarMinimizedDefaultUI .minimizedText>.message {
			    color: #000000;
			    font-size: 13px;
			        font-family: arial;
			}
			.embeddedServiceSidebarMinimizedDefaultUI {
			    background: #e3d980 !important;
			    border: none;}
			    .embeddedServiceSidebarDialogState .dialogButton span.label, .embeddedServiceLiveAgentStateChat .endChatContainer .endChatButton span {
			    color: #fff;
			}
			.embeddedServiceLiveAgentStateChatPlaintextMessageDefaultUI.chasitor.plaintextContent .uiOutputRichText {
    color: #fff;
}


			@media (max-width:768px) {
				.embeddedServiceHelpButton .helpButton .uiButton {
					width: 50px;
					height: 50px;
					border-radius: 100%;
					min-width: unset;
				}
				.embeddedServiceSidebarMinimizedDefaultUI {
					width: 50px;
					height: 50px;
					min-width: unset;
					min-height: unset;
					border-radius: 100%;
				}
				.embeddedServiceHelpButton .embeddedServiceIcon {
					margin: 0 3px;
				}
				.embeddedServiceSidebarMinimizedDefaultUI .messageContent {
					margin: 0 1px;
				}
				.embeddedServiceHelpButton .helpButton:before {
					background-size: 100%;
					width: 50px;
					height: 50px;
					right: 0;
					left: unset;
					bottom: 44px;
				}
				.embeddedServiceSidebarMinimizedDefaultUI.sidebarHeader {
					bottom: 0 !important;
				}
				.embeddedServiceHelpButton .helpButton {
					bottom: 18px;
					right: 16px !important;
				}
				.embeddedServiceSidebarMinimizedDefaultUI.helpButton {
					bottom: 18px;
					right: 16px !important;
				}
				
				
				.embeddedServiceSidebarMinimizedDefaultUI .minimizedImage,
				.embeddedServiceSidebarMinimizedDefaultUI .embeddedServiceIcon {
					margin-right: 0;
				}
				.sidebarHeader.minimizedContainer.embeddedServiceSidebarMinimizedDefaultUI:before {
					background-size: 100%;
					width: 50px;
					height: 50px;
					right: 29px;
					bottom: 49px;
				}
				.embeddedServiceSidebarMinimizedDefaultUI.helpButton {
					width: 50px;
					height: 50px;
					min-width: unset;
					min-height: unset;
					border-radius: 100%;
				}
				.embeddedServiceSidebarMinimizedDefaultUI .minimizedText {
					font-size: 0;
				}
				.sidebarHeader.minimizedContainer.embeddedServiceSidebarMinimizedDefaultUI:before {
					background-size: 100%;
					width: 50px;
					height: 50px;
					right: 29px;
					bottom: 49px;
				}
				.embeddedServiceHelpButton .helpButton {
					bottom: 18px;
					right: 16px !important;
				}
			}
		</style>
		
		<!-- Embedded chat deployment code (Auto Generated) -->
		<script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
		
		<!-- Chat button event binding and initializing-->
		<script type='text/javascript'> 
			
			// Auto generated code for chat settings 
			var initESW = function(gslbBaseURL) {
				
				//------- TODO: Pass the language, firstname of the visitor and email parameters
				var language = 'EN';
				var email;
				var firstName = 'Poonam';
				var entrySite = 'RLE';
				//--------TODO end
                
				embedded_svc.settings.displayHelpButton = true; 
				embedded_svc.settings.language = language;
				
				if(language === "EN"){
					embedded_svc.settings.defaultMinimizedText = 'LIVE CHAT IS OPEN';
					embedded_svc.settings.disabledMinimizedText = 'LIVE CHAT IS CLOSED';
					embedded_svc.settings.offlineSupportMinimizedText = 'LIVE CHAT IS CLOSED';   
					embedded_svc.settings.loadingText = 'Loading'; 
				}
				else if(language === "FR"){
					embedded_svc.settings.defaultMinimizedText = 'CLAVARDAGE OUVERT';
					embedded_svc.settings.disabledMinimizedText = 'CLAVARDAGE FERMÉ';
					embedded_svc.settings.offlineSupportMinimizedText = 'CLAVARDAGE FERMÉ'; 
					embedded_svc.settings.loadingText = 'Chargement'; 
				}
				
				
				// Sets the auto-population of pre-chat form fields
				embedded_svc.settings.prepopulatedPrechatFields = {Chat_Language__c: language, Entry_Site__c:entrySite}; 
				   
				embedded_svc.settings.extraPrechatFormDetails = [	
																	{
																		// This is the Person Account record type to find the existing Person Accounts
																		"label":"RecordTypeId",
																		"value":"0121U000000G9pFQAS" 
																	},
					  												{
																		"label": "Status",
																		"value": "New"
																	},
																	{
																		"label": "Origin",
																		"value": "Chat"
																	}
																];
				
				if(email){
					embedded_svc.settings.extraPrechatFormDetails.push({"label":"Email", "value":email},
																	   {
																			"label": "Visitor Logged In?",
																			"value": true,
																			"displayToAgent": true,
																			 "transcriptFields": ["Visitor_Logged_In__c"]
																	   }); 
					embedded_svc.settings.prepopulatedPrechatFields.Email = email;

				}
				
				if(firstName){
					embedded_svc.settings.extraPrechatFormDetails.push({
																	   		"label": "First Name",
																			"value": firstName
																	   });
				}
				
				embedded_svc.settings.extraPrechatInfo = [
															{
																"entityName": "Contact",
																"saveToTranscript": "ContactId",
																"showOnCreate": true,
																"entityFieldMaps": [{
																	"isExactMatch": false,
																	"fieldName": "FirstName",
																	"doCreate": false,
																	"doFind": false,
																	"label": "First Name"
																}, {
																	"isExactMatch": false,
																	"fieldName": "LastName",
																	"doCreate": false,
																	"doFind": false,
																	"label": "Last Name"
																}]
															},
															{
																'entityName':'Account',
																'showOnCreate':true,
																'saveToTranscript':'AccountId',
																"linkToEntityName": "Case",
   																"linkToEntityField": "AccountId",
																'entityFieldMaps':[
																{
																	"isExactMatch": false,
																	"fieldName": "FirstName",
																	"doCreate": true,
																	"doFind": false,
																	"label": "First Name"
																},
																{
																	"isExactMatch": false,
																	"fieldName": "LastName",
																	"doCreate": true,
																	"doFind": false,
																	"label": "Last Name"
																},
															    {
																  "doCreate": true,
																  "doFind": false,
																  "fieldName": "RecordTypeId",
																  "isExactMatch": true, 
																  "label": "RecordTypeId"
																},
																{
																	"doCreate":true,
																	"doFind":true,
																	"fieldName":"PersonEmail",
																	"isExactMatch":true,
																	"label":"Email"
																},
																{
																	"doCreate":true,
																	"doFind":false,
																	"fieldName":"Email_Key__c",
																	"isExactMatch":true,
																	"label":"Email"
																}]
															},
															{
																"entityName": "Case",
																"entityFieldMaps": [{
																	"isExactMatch": false,
																	"fieldName": "Status",
																	"doCreate": true,
																	"doFind": false,
																	"label": "Status"
																}, 
																{
																	"isExactMatch": false,
																	"fieldName": "Origin",
																	"doCreate": true,
																	"doFind": false,
																	"label": "Origin"
																}]
															}
														];
				
				embedded_svc.settings.directToButtonRouting = function(prechatFormData) { 
					if (language === "EN"){
						return "57303000000001X";
					}
					else if(language === "FR"){
						return "57303000000001c"; 
					}
				}

				embedded_svc.settings.enabledFeatures = ['LiveAgent'];
				embedded_svc.settings.entryFeature = 'LiveAgent';
                
                embedded_svc.init(
                    'https://toyrusca--uat.my.salesforce.com',
                    'https://uat-truca.cs196.force.com',
                    gslbBaseURL,
                    '00D030000008acd',
                    'Rise_Little_Earthlings',
                    {
                        baseLiveAgentContentURL: 'https://c.la2-c1cs-ia4.salesforceliveagent.com/content',
                        deploymentId: '57203000000001S',
                        buttonId: '57303000000001N',
                        baseLiveAgentURL: 'https://d.la2-c1cs-ia4.salesforceliveagent.com/chat',
                        eswLiveAgentDevName: 'EmbeddedServiceLiveAgent_Parent04I03000000GmcyEAC_177fbc3389f',
                        isOfflineSupportEnabled: true
                    }
                );
		    }; 

		    if (!window.embedded_svc) {
				var s = document.createElement('script');
				s.setAttribute('src', 'https://toyrusca--uat.my.salesforce.com/embeddedservice/5.0/esw.min.js');
				s.onload = function() {
					initESW(null);
				};
				document.body.appendChild(s);
		    } 
			else {
				initESW('https://service.force.com');
		    }
		
		</script>
	</body>
</html>
